diff --git a/src/gallium/auxiliary/gallivm/lp_bld_debug.cpp b/src/gallium/auxiliary/gallivm/lp_bld_debug.cpp
index 1c886ea..7b41b27 100644
--- a/src/gallium/auxiliary/gallivm/lp_bld_debug.cpp
+++ b/src/gallium/auxiliary/gallivm/lp_bld_debug.cpp
@@ -52,6 +52,9 @@
 #include <llvm/MC/MCInst.h>
 #include <llvm/MC/MCInstPrinter.h>
 #endif /* HAVE_LLVM >= 0x0207 */
+#if HAVE_LLVM >= 0x0305
+#include <llvm/MC/MCContext.h>
+#endif /* HAVE_LLVM >= 0x0305 */
 #if HAVE_LLVM >= 0x0301
 #include <llvm/MC/MCRegisterInfo.h>
 #endif /* HAVE_LLVM >= 0x0301 */
@@ -226,17 +229,6 @@ disassemble(const void* func, llvm::raw_ostream & Out)
    }
 
 #if HAVE_LLVM >= 0x0300
-   const MCSubtargetInfo *STI = T->createMCSubtargetInfo(Triple, sys::getHostCPUName(), "");
-   OwningPtr<const MCDisassembler> DisAsm(T->createMCDisassembler(*STI));
-#else 
-   OwningPtr<const MCDisassembler> DisAsm(T->createMCDisassembler());
-#endif 
-   if (!DisAsm) {
-      Out << "error: no disassembler for target " << Triple << "\n";
-      return 0;
-   }
-
-#if HAVE_LLVM >= 0x0300
    unsigned int AsmPrinterVariant = AsmInfo->getAssemblerDialect();
 #else
    int AsmPrinterVariant = AsmInfo->getAssemblerDialect();
@@ -256,6 +248,24 @@ disassemble(const void* func, llvm::raw_ostream & Out)
    }
 #endif
 
+#if HAVE_LLVM >= 0x0300
+   const MCSubtargetInfo *STI = T->createMCSubtargetInfo(Triple, sys::getHostCPUName(), "");
+#if HAVE_LLVM >= 0x0305
+   MCContext Ctx(AsmInfo.get(), MRI.get(), 0);
+   OwningPtr<const MCDisassembler> DisAsm(T->createMCDisassembler(*STI, Ctx));
+#else
+   const MCSubtargetInfo *STI = T->createMCSubtargetInfo(Triple, sys::getHostCPUName(), "");
+   OwningPtr<const MCDisassembler> DisAsm(T->createMCDisassembler(*STI));
+#endif /* HAVE_LLVM < 0x0305 */
+#else
+   OwningPtr<const MCDisassembler> DisAsm(T->createMCDisassembler());
+#endif /* HAVE_LLVM < 0x0300 */
+   if (!DisAsm) {
+      Out << "error: no disassembler for target " << Triple << "\n";
+      return 0;
+   }
+
+
 #if HAVE_LLVM >= 0x0301
    OwningPtr<MCInstPrinter> Printer(
          T->createMCInstPrinter(AsmPrinterVariant, *AsmInfo, *MII, *MRI, *STI));
