# Maintainer: Thomas Dziedzic < gostrc at gmail >
# Contributor: Roberto Alsina <ralsina@kde.org>
# Contributor: Tomas Lindquist Olsen <tomas@famolsen.dk>
# Contributor: Anders Bergh <anders@archlinuxppc.org>
# Contributor: Tomas Wilhelmsson <tomas.wilhelmsson@gmail.com>

_gitroot="http://llvm.org/git/llvm"
_gitname="llvm"

pkgname=('lib32-llvm-git' 'lib32-llvm-libs-git' 'lib32-clang-svn')
pkgver=r123346.7ef85b4
pkgrel=1
arch=('x86_64')
url='http://llvm.org/'
license=('custom:University of Illinois')
makedepends=(
    'cmake'
    'gcc-multilib'
    'lib32-zlib'
    'lib32-libffi'
    'lib32-libxml2'
    'python2'
    'git'
)
# this is always the latest svn so debug info can be useful
options=('staticlibs' '!strip')
source=(
    git+$_gitroot
    git+http://llvm.org/git/clang.git
    git+http://llvm.org/git/compiler-rt.git
)
sha256sums=(
    'SKIP'
    'SKIP'
    'SKIP'
)
#
# BEGIN INTERNAL VARIABLES AND FUNCTIONS
#

# Install the license file for a package
# Arguments: NONE
_install_license() {
    install -D -m 0644 "${srcdir}/${_gitname}/LICENSE.TXT" "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"
}

#
# END INTERNAL VARIABLES AND FUNCTIONS
#


pkgver() {
  cd "$srcdir/$_gitname"
  printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

prepare() {
  cd "${srcdir}/${_gitname}"

  rm -rf tools/clang
  git clone ${srcdir}/clang tools/clang

  rm -rf projects/compiler-rt
  git clone ${srcdir}/compiler-rt projects/compiler-rt

  rm -rf "${srcdir}/build"
  mkdir -p "${srcdir}/build"
}

build() {
  cd "${srcdir}/build"

  export PKG_CONFIG_PATH='/usr/lib32/pkgconfig'
  _ffi_include_flags=$(pkg-config --cflags-only-I libffi)
  _ffi_libs_flags=$(pkg-config --libs-only-L libffi)

  # LLVM_BUILD_LLVM_DYLIB: Build the dynamic runtime libraries (e.g. libLLVM.so).
  # LLVM_DYLIB_EXPORT_ALL: Export all symbols in the dynamic libs, not just the C API.
  # LLVM_LINK_LLVM_DYLIB:  Link our own tools against the libLLVM dynamic library, too.
  # LLVM_BINUTILS_INCDIR:  Set to binutils' plugin-api.h location in order to build LLVMgold.
  # LLVM_TARGET_ARCH:      Theoretically, LLVM_BUILD_32_BITS should be used instead, which
  #                        would also make CMAKE_C{,XX}_FLAGS redundant, but that option
  #                        makes linking fail, because of incompatible architectures.
  cmake -G 'Unix Makefiles' \
      -DCMAKE_BUILD_TYPE:STRING=Release \
      -DCMAKE_INSTALL_PREFIX:PATH=/usr \
      -DLLVM_LIBDIR_SUFFIX:STRING=32 \
      -DCMAKE_C_FLAGS:STRING=-m32 \
      -DCMAKE_CXX_FLAGS:STRING=-m32 \
      -DLLVM_APPEND_VC_REV:BOOL=ON \
      -DLLVM_ENABLE_RTTI:BOOL=ON \
      -DLLVM_TARGET_ARCH:STRING=i386 \
      -DLLVM_ENABLE_FFI:BOOL=ON \
      -DFFI_INCLUDE_DIR:PATH="${_ffi_include_flags#-I}" \
      -DFFI_LIBRARY_DIR:PATH="${_ffi_libs_flags#-L}" \
      -DLLVM_BUILD_LLVM_DYLIB:BOOL=ON \
      -DLLVM_DYLIB_EXPORT_ALL:BOOL=ON \
      -DLLVM_LINK_LLVM_DYLIB:BOOL=ON \
      -DLLVM_BINUTILS_INCDIR:PATH=/usr/include \
      "../${_gitname}"

  # Must run this target independently, or else docs/cmake_install.cmake will fail.
  #
  # NOTICE: We don't need the documentation for the multilib package, but running
  # this target is still required if ocaml-{ctypes,findlib} happen to be installed.
  # While it's always a good idea to build the packages in a clean chroot, let's be
  # a bit more user friendly (and reduce the number of complaints).
  [[ $(pacman -Qq ocaml-{ctypes,findlib} 2>/dev/null | wc -l) -eq 2 ]] && make ocaml_doc

  make
}

package_lib32-llvm-git() {
  pkgdesc='The LLVM Compiler Infrastructure (32-bit)'
  depends=(
      "lib32-llvm-libs-git"
      'llvm-git'
  )
  provides=('lib32-llvm' 'lib32-llvm-svn')
  replaces=('lib32-llvm' 'lib32-llvm-svn')
  conflicts=('lib32-llvm' 'lib32-llvm-svn')

  cd "${srcdir}/build"

  # Exclude the clang directory, since it'll be installed in a separate package
  sed -i \
      "s|^\([[:blank:]]*include(\"${srcdir}/build/tools/clang/cmake_install.cmake\")\)$|#\1|" \
      tools/cmake_install.cmake

  make DESTDIR="${pkgdir}" install

  # The runtime libraries get installed in llvm-libs-svn
  rm -f "${pkgdir}"/usr/lib32/lib{LLVM,LTO}.so{,.*}
  mv -f "${pkgdir}"/usr/lib32/{BugpointPasses,LLVMgold}.so "${srcdir}/"

  # Clang libraries go to a separate package
  rm -rf "${srcdir}/clang"
  mv "${pkgdir}/usr/lib32/clang" "${srcdir}/clang"

  # Get rid of example Hello transformation
  rm -f "${pkgdir}"/usr/lib32/*LLVMHello.*

  # Remove all bits that we don't need in multilib
  mv "${pkgdir}/usr/bin/llvm-config" "${srcdir}"
  mv "${pkgdir}/usr/include/llvm/Config/llvm-config.h" "${srcdir}"

  rm -rf "${pkgdir}/usr/"{bin,lib,docs,include,share}

  install -m755 -d "${pkgdir}/usr/bin"
  mv "${srcdir}/llvm-config" "${pkgdir}/usr/bin/llvm-config32"
  install -m755 -d "${pkgdir}/usr/include/llvm/Config"
  mv "${srcdir}/llvm-config.h" "${pkgdir}/usr/include/llvm/Config/llvm-config-32.h"

  _install_license
}

package_lib32-llvm-libs-git() {
  pkgdesc='The LLVM Compiler Infrastructure (runtime libraries, 32-bit)'
  depends=(
      'lib32-gcc-libs'
      'lib32-libffi'
      'lib32-ncurses'
      'lib32-zlib'
  )
  provides=('lib32-llvm-libs' 'lib32-llvm-libs-svn')
  replaces=('lib32-llvm-libs' 'lib32-llvm-libs-svn')
  conflicts=('lib32-llvm-libs' 'lib32-llvm-libs-svn')

  cd "${srcdir}/build"

  make DESTDIR="${pkgdir}" install-{LLVM,LTO}

  # Moved from the llvm-svn package here
  mv "${srcdir}"/{BugpointPasses,LLVMgold}.so "${pkgdir}/usr/lib32/"

  # Ref: http://llvm.org/docs/GoldPlugin.html
  install -m755 -d "${pkgdir}/usr/lib32/bfd-plugins"
  ln -s {/usr/lib32,"${pkgdir}/usr/lib32/bfd-plugins"}/LLVMgold.so

  # Must have a symlink that corresponds to the output of `llvm-config --version`.
  # Without it, some builds, e.g. Mesa, might fail for "lack of shared libraries".
  for _shlib in lib{LLVM,LTO} ; do
    ln -rs "${pkgdir}/usr/lib32/${_shlib}.so.3.8.0svn" "${pkgdir}/usr/lib32/${_shlib}-3.8.0git.so"
  done

  _install_license
}

package_lib32-clang-svn() {
  pkgdesc='C language family frontend for LLVM (32-bit)'
  url='http://clang.llvm.org/'
  depends=(
      'clang'
      "lib32-llvm-git"
  )
  provides=('lib32-clang' 'lib32-clang-svn')
  replaces=('lib32-clang' 'lib32-clang-svn')
  conflicts=('lib32-clang' 'lib32-clang-svn')

  cd "${srcdir}/build/tools/clang"

  make DESTDIR="${pkgdir}" install

  # Remove all bits that we don't need in multilib
  rm -rf "${pkgdir}"/usr/{bin,include,share/clang}

  _install_license
}
# vim: ft=sh syn=sh et

