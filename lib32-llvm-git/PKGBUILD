# Maintainer: Thomas Dziedzic < gostrc at gmail >
# Contributor: Roberto Alsina <ralsina@kde.org>
# Contributor: Tomas Lindquist Olsen <tomas@famolsen.dk>
# Contributor: Anders Bergh <anders@archlinuxppc.org>
# Contributor: Tomas Wilhelmsson <tomas.wilhelmsson@gmail.com>

_gitroot="http://llvm.org/git/llvm"
_gitname="llvm"

pkgname=('lib32-llvm-git' 'lib32-llvm-libs-git')
pkgver=r120328.c2b7a39
pkgrel=1
arch=('x86_64')
url="http://llvm.org"
license=('custom:University of Illinois/NCSA Open Source License')
makedepends=('git' 'lib32-libffi' 'lib32-zlib' 'python2' 'gcc-multilib')
provides=('lib32-llvm')
conflicts=('lib32-llvm')
source=(git+$_gitroot
        git+http://llvm.org/git/compiler-rt.git
        installfix.patch
)
md5sums=('SKIP'
         'SKIP'
         '6040dbb75d701294f302dc12c8cc0c97')

pkgver() {
  cd "$srcdir/$_gitname"
  printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

prepare() {
  cd "${srcdir}/${_gitname}"

  rm -rf tools/clang
  rm -rf projects/compiler-rt

  git clone ${srcdir}/compiler-rt projects/compiler-rt

  # Fix installation directories, ./configure doesn't seem to set them right
  sed -i -e 's:\$(PROJ_prefix)/lib:$(PROJ_prefix)/lib32:' \
         -e 's:\$(PROJ_prefix)/docs/llvm:$(PROJ_prefix)/share/doc/llvm:' \
    Makefile.config.in
  sed -i '/ActiveLibDir = ActivePrefix/s:lib:lib32:' \
    tools/llvm-config/llvm-config.cpp
  sed -i 's:LLVM_LIBDIR="${prefix}/lib":LLVM_LIBDIR="${prefix}/lib32":' \
    autoconf/configure.ac \
    configure

  # Fix insecure rpath (http://bugs.archlinux.org/task/14017)
  sed -i 's:$(RPATH) -Wl,$(\(ToolDir\|LibDir\|ExmplDir\))::g' Makefile.rules

  patch -Np1 -i ../installfix.patch

  rm -rf "${srcdir}/build"
  mkdir -p "${srcdir}/build"
}


build() {
  cd "${srcdir}/build"

  export CC="gcc -m32"
  export CXX="g++ -m32"
  export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"

  ${srcdir}/${_gitname}/configure \
    --host=i386-pc-linux-gnu \
    --target=i386-pc-linux-gnu \
    --prefix=/usr \
    --libdir=/usr/lib32 \
    --sysconfdir=/etc \
    --enable-shared \
    --enable-libffi \
    --enable-targets=all \
    --disable-expensive-checks \
    --disable-debug-runtime \
    --disable-assertions \
    --with-binutils-include=/usr/include \
    --with-python=/usr/bin/python2 \
    --enable-optimized

  make REQUIRES_RTTI=1
}

package_lib32-llvm-git() {
  pkgdesc="Low Level Virtual Machine (32-bit)"
  depends=('lib32-llvm-libs-git' 'llvm-git')
  provides=('lib32-llvm')
  conflicts=('lib32-llvm')

  make -C "${srcdir}/build" DESTDIR="${pkgdir}" install

  # The runtime library goes into lib32-llvm-libs
  # The runtime library goes into llvm-libs
  rm -rf "${srcdir}"/*.so
  mv "${pkgdir}"/usr/lib32/libLLVM-*.so "${srcdir}"

  # Fix permissions of static libs
  chmod -x "$pkgdir"/usr/lib32/*.a

  mv "$pkgdir/usr/bin/i386-pc-linux-gnu-llvm-config" "$pkgdir/usr/lib32/llvm-config"

  # Get rid of example Hello transformation
  rm "$pkgdir"/usr/lib32/*LLVMHello.*

  # Symlink LLVMgold.so into /usr/lib/bfd-plugins
  # (https://bugs.archlinux.org/task/28479)
  install -d "$pkgdir/usr/lib32/bfd-plugins"
  ln -s ../LLVMgold.so "$pkgdir/usr/lib32/bfd-plugins/LLVMgold.so"

  mv "$pkgdir"/usr/include/llvm/Config/*config.h "$pkgdir/"
  rm -rf "$pkgdir"/usr/{bin,include,lib,share/{llvm,doc,man}}

  install -d "$pkgdir/usr/include/llvm/Config"
  mv "$pkgdir/config.h" "$pkgdir/usr/include/llvm/Config/config-32.h"
  mv "$pkgdir/llvm-config.h" "$pkgdir/usr/include/llvm/Config/llvm-config-32.h"

  install -d "$pkgdir"/usr/bin
  mv "$pkgdir/usr/lib32/llvm-config" "$pkgdir/usr/bin/llvm-config32"

  install -Dm644 ${srcdir}/${_gitname}/LICENSE.TXT "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"
}

package_lib32-llvm-libs-git() {
  pkgdesc="Low Level Virtual Machine (runtime library)(32-bit)"
  depends=('lib32-libffi' 'lib32-zlib' 'lib32-gcc-libs')
  provides=('lib32-llvm-libs')
  conflicts=('lib32-llvm-libs')

  cd "${srcdir}"

  install -m755 -d ${pkgdir}/usr/lib32/
  mv "${srcdir}"/libLLVM-*.so "${pkgdir}/usr/lib32/"
  for _shlib in "${pkgdir}"/usr/lib32/*.so
  do
    test -L "${_shlib}" && ln -sf $(basename $(readlink ${_shlib})) ${_shlib}
  done

  install -Dm644 ${srcdir}/${_gitname}/LICENSE.TXT "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"
}
# vim: ft=sh syn=sh et

