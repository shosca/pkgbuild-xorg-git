diff --git a/src/utils_glx.h b/src/utils_glx.h
index 19d03e4..29d9922 100644
--- a/src/utils_glx.h
+++ b/src/utils_glx.h
@@ -48,6 +48,15 @@ typedef void (*PFNGLXBINDTEXIMAGEEXTPROC)(Display *, GLXDrawable, int, const int
 typedef void (*PFNGLXRELEASETEXIMAGEEXTPROC)(Display *, GLXDrawable, int);
 #endif
 
+#if GL_GLEXT_VERSION >= 85
+/* XXX: PFNGLMULTITEXCOORD2FPROC got out of the
+GL_VERSION_1_3_DEPRECATED
++block and is not defined if GL_VERSION_1_3 is defined
+in <GL/gl.h>
++Redefine the type here as an interim solution */
+typedef void (*PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);
+#endif
+
 #ifndef GL_FRAMEBUFFER_BINDING
 #define GL_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING_EXT
 #endif
diff --git a/src/vdpau_decode.c b/src/vdpau_decode.c
index 4a402d7..ac8d393 100644
--- a/src/vdpau_decode.c
+++ b/src/vdpau_decode.c
@@ -1284,15 +1284,16 @@ vdpau_EndPicture(
         obj_context,
         get_num_ref_frames(obj_context)
     );
-    if (vdp_status == VDP_STATUS_OK)
+    if (vdp_status == VDP_STATUS_OK) {
         vdp_status = vdpau_decoder_render(
             driver_data,
             obj_context->vdp_decoder,
             obj_surface->vdp_surface,
-            (VdpPictureInfo)&obj_context->vdp_picture_info,
+            &obj_context->vdp_picture_info,
             obj_context->vdp_bitstream_buffers_count,
             obj_context->vdp_bitstream_buffers
         );
+    }
     va_status = vdpau_get_VAStatus(vdp_status);
 
     /* XXX: assume we are done with rendering right away */
diff --git a/src/vdpau_dump.c b/src/vdpau_dump.c
index 899888b..1684d6a 100644
--- a/src/vdpau_dump.c
+++ b/src/vdpau_dump.c
@@ -59,8 +59,8 @@ const char *string_of_VABufferType(VABufferType type)
         _(VAEncSequenceParameterBufferType);
         _(VAEncPictureParameterBufferType);
         _(VAEncSliceParameterBufferType);
-        _(VAEncH264VUIBufferType);
-        _(VAEncH264SEIBufferType);
+        //_(VAEncH264VUIBufferType);
+        //_(VAEncH264SEIBufferType);
 #endif
 #if VA_CHECK_VERSION(0,31,1)
         _(VAQMatrixBufferType);
